/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package indeks;

import florist.koneksi;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NDR
 */
public class katalog extends javax.swing.JPanel {
    Connection conn = new koneksi().conn();
    DefaultTableModel model;
    String ImgPath = null;

    /**
     * Creates new form katalog
     */
    public katalog() {
        initComponents();
        tampil();
        //String [] head_tbl = {"KODE","JENIS","HARGA","GAMBAR"};
        //model = new DefaultTableModel(head_tbl, 2);
        //tbl_bunga.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_bunga = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tf_kat_kd = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cb_kat_jenis = new javax.swing.JComboBox<>();
        tf_kat_harga = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        lbl_gambar = new javax.swing.JLabel();
        btn_kat_gambar = new javax.swing.JButton();
        tf_cari = new javax.swing.JTextField();
        btn_cari = new javax.swing.JButton();
        btn_kat_tambah = new javax.swing.JButton();
        btn_kat_edit = new javax.swing.JButton();
        btn_kat_hapus = new javax.swing.JButton();
        btn_reset = new javax.swing.JButton();

        tbl_bunga.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode", "Jenis", "Harga"
            }
        ));
        tbl_bunga.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_bungaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_bunga);

        jLabel1.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 0));
        jLabel1.setText("KATALOG BUNGA");

        jLabel2.setText("Kode");

        jLabel3.setText("Jenis");

        jLabel4.setText("Harga");

        cb_kat_jenis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Papan", "Meja", "HandBucket" }));

        jLabel5.setText("Gambar");

        lbl_gambar.setBackground(new java.awt.Color(153, 153, 153));
        lbl_gambar.setOpaque(true);

        btn_kat_gambar.setText("BROWSE");
        btn_kat_gambar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_kat_gambarActionPerformed(evt);
            }
        });

        btn_cari.setText("CARI");
        btn_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cariActionPerformed(evt);
            }
        });

        btn_kat_tambah.setText("TAMBAH");
        btn_kat_tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_kat_tambahActionPerformed(evt);
            }
        });

        btn_kat_edit.setText("EDIT");
        btn_kat_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_kat_editActionPerformed(evt);
            }
        });

        btn_kat_hapus.setText("HAPUS");
        btn_kat_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_kat_hapusActionPerformed(evt);
            }
        });

        btn_reset.setText("Refresh");
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(btn_kat_tambah)
                .addGap(6, 6, 6)
                .addComponent(btn_kat_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(btn_kat_hapus)
                .addGap(79, 79, 79)
                .addComponent(btn_reset)
                .addGap(18, 18, 18)
                .addComponent(tf_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_cari))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(tf_kat_harga, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cb_kat_jenis, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tf_kat_kd, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lbl_gambar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_kat_gambar)
                        .addGap(27, 27, 27)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tf_kat_kd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cb_kat_jenis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tf_kat_harga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jLabel5))
                            .addComponent(lbl_gambar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addComponent(btn_kat_gambar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_kat_tambah)
                    .addComponent(btn_kat_edit)
                    .addComponent(btn_kat_hapus)
                    .addComponent(btn_reset)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_cari)
                        .addComponent(tf_cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_kat_gambarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_kat_gambarActionPerformed
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.images","jpg","png","JPG","PNG");
        file.addChoosableFileFilter(filter);
        int result = file.showSaveDialog(null);
        
        if(result == JFileChooser.APPROVE_OPTION){
            File sfile = file.getSelectedFile();
            String path = sfile.getAbsolutePath();
            lbl_gambar.setIcon(ImageResize(path, null));
            ImgPath = path;
        } else {
            JOptionPane.showMessageDialog(null, "Gambar Belum Dipilih");
        
        }
    }//GEN-LAST:event_btn_kat_gambarActionPerformed

    private void btn_kat_tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_kat_tambahActionPerformed
        if(cekinput() && ImgPath!= null){
            try {
                String sqltambah = "INSERT INTO bunga VALUES (?,?,?,?)";
                PreparedStatement ps = conn.prepareStatement(sqltambah);
                ps.setString(1, tf_kat_kd.getText());
                ps.setString(2, cb_kat_jenis.getSelectedItem().toString());
                ps.setString(3, tf_kat_harga.getText());
            
                InputStream img = new FileInputStream(new File(ImgPath));
                ps.setBlob(4, img);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Tersimpan");
                tampil();
                reset();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Ada Form Kosong atau Kode Sudah ADA");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Kesalahan Tidak Dikenal",ex.getMessage(),JOptionPane.ERROR_MESSAGE);
            }  
        } else {
                JOptionPane.showMessageDialog(null, "Ada Form Kosong");
        }
    }//GEN-LAST:event_btn_kat_tambahActionPerformed

    private void btn_kat_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_kat_editActionPerformed
        if(cekinput() && tf_kat_kd != null){
            String sqlupdate = null;
            PreparedStatement ps = null;
            //update tanpa gambar
            if(ImgPath == null){
                try {
                    sqlupdate= "UPDATE bunga SET jenis_bunga=?,harga=? WHERE kd_bunga=?";
                    ps = conn.prepareStatement(sqlupdate);
                    ps.setString(1, cb_kat_jenis.getSelectedItem().toString());
                    ps.setString(2, tf_kat_harga.getText());
                    ps.setString(3, tf_kat_kd.getText());
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(null, tf_kat_kd.getText()+" Berhasil Diubah");
                    tampil();
                    reset();
                    
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
            } //update dengan gambar
            else {
                try {
                    InputStream img = new FileInputStream(new File(ImgPath));
                    
                    sqlupdate= "UPDATE bunga SET jenis_bunga=?,harga=?,gambar=? WHERE kd_bunga=?";
                    ps = conn.prepareStatement(sqlupdate);
                    ps.setString(1, cb_kat_jenis.getSelectedItem().toString());
                    ps.setString(2, tf_kat_harga.getText());
                    ps.setBlob(3, img);
                    ps.setString(4, tf_kat_kd.getText());
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(null, tf_kat_kd.getText()+" Berhasil Diubah");
                    tampil();
                    reset();
                } catch (Exception ex) {
                    Logger.getLogger(katalog.class.getName()).log(Level.SEVERE, null, ex);
                }     
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Ada Form Kosong");
        }
    }//GEN-LAST:event_btn_kat_editActionPerformed

    private void btn_kat_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_kat_hapusActionPerformed
        if(!tf_kat_kd.getText().equalsIgnoreCase("")){
            try {
                String sqlhapus ="DELETE FROM bunga WHERE kd_bunga = ?";
                PreparedStatement ps = conn.prepareStatement(sqlhapus);
                ps.setString(1, tf_kat_kd.getText());
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Terhapus : "+tf_kat_kd.getText());
                
            } catch (SQLException ex) {
                Logger.getLogger(katalog.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Tidak Ada Kode Dipilih");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Form Kode Kosong", "", JOptionPane.ERROR_MESSAGE);
        }
        tampil();
        reset();
    }//GEN-LAST:event_btn_kat_hapusActionPerformed

    private void tbl_bungaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_bungaMouseClicked
        int i = tbl_bunga.getSelectedRow();
        if(i>-1){
            tf_kat_kd.setText(model.getValueAt(i, 0).toString());
            cb_kat_jenis.setSelectedItem(model.getValueAt(i, 1).toString());
            tf_kat_harga.setText(model.getValueAt(i, 2).toString());
            lbl_gambar.setIcon(ImageResize(null, getbungalist().get(i).getgambar()));
            tf_kat_kd.setEnabled(false);
            
            
        }
    }//GEN-LAST:event_tbl_bungaMouseClicked

    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
        reset();
    }//GEN-LAST:event_btn_resetActionPerformed

    private void btn_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cariActionPerformed
        try {
            int rowa = tbl_bunga.getRowCount();
            for(int i=0; i<rowa;i++){
            model.removeRow(0);
            }
            String sqlcari = "SELECT * FROM bunga WHERE kd_bunga=? OR jenis_bunga=? OR harga<=?+1";
            PreparedStatement ps = conn.prepareStatement(sqlcari);
            ps.setString(1, tf_cari.getText());
            ps.setString(2, tf_cari.getText());
            ps.setString(3, tf_cari.getText());
            ResultSet rss = ps.executeQuery();
            while(rss.next()){
                
                String data[] = {rss.getString(1),rss.getString(2),rss.getString(3)};
                model.addRow(data);
            }            
        } catch (SQLException ex) {
            Logger.getLogger(katalog.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btn_cariActionPerformed

    
    
    public ImageIcon ImageResize(String imagePath, byte[] gmbr){
        ImageIcon gambar = null;
        if(imagePath != null){
            gambar = new ImageIcon(imagePath);
        } else {
            gambar = new ImageIcon(gmbr);
        }
        Image img = gambar.getImage();
        Image img2 = img.getScaledInstance(lbl_gambar.getWidth(), lbl_gambar.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(img2);
        
        return image;
        
    }
    
    public Boolean cekinput(){
        if(tf_kat_kd.getText() == null
           || tf_kat_harga == null){
            return false;
        
        } else{
            return true;
        }
    }
    
    
    public ArrayList<bunga> getbungalist(){
        ArrayList<bunga> bungalist = new ArrayList<bunga>();
        String sqltampil ="SELECT * FROM bunga";
        ResultSet rs;
        try {
            rs = conn.createStatement().executeQuery(sqltampil);
            bunga bunga;
            
            while(rs.next()){
                bunga = new bunga(rs.getString("kd_bunga"),rs.getString("jenis_bunga"),rs.getString("harga"),rs.getBytes("gambar"));
                bungalist.add(bunga);
            }
    
        } catch (SQLException ex) {
            Logger.getLogger(katalog.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return bungalist;
    }
    
    
    private void tampil(){
        ArrayList<bunga> list = getbungalist();
        model = (DefaultTableModel)tbl_bunga.getModel();
        
        Object [] row = new Object[3];
        int rowa = tbl_bunga.getRowCount();
        for(int i=0; i<rowa;i++){
            model.removeRow(0);
        }
        for(int i=0;i<list.size();i++){
            row[0] = list.get(i).getkd();
            row[1] = list.get(i).getjenis();
            row[2] = list.get(i).getharga();
            model.addRow(row);
        }
    }
    
    public void reset(){
        tf_kat_kd.setText("");
        cb_kat_jenis.setSelectedItem("Papan");
        tf_kat_harga.setText("");
        lbl_gambar.setIcon(null);
        ImgPath = null;
        tf_kat_kd.setEnabled(true);
        tampil();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cari;
    private javax.swing.JButton btn_kat_edit;
    private javax.swing.JButton btn_kat_gambar;
    private javax.swing.JButton btn_kat_hapus;
    private javax.swing.JButton btn_kat_tambah;
    private javax.swing.JButton btn_reset;
    private javax.swing.JComboBox<String> cb_kat_jenis;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_gambar;
    private javax.swing.JTable tbl_bunga;
    private javax.swing.JTextField tf_cari;
    private javax.swing.JTextField tf_kat_harga;
    private javax.swing.JTextField tf_kat_kd;
    // End of variables declaration//GEN-END:variables
}
